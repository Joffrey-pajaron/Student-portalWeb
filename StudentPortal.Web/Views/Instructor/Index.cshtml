@{
    ViewData["Title"] = "Instructors";
}

<link rel="stylesheet" href="https://cdn.datatables.net/1.13.6/css/jquery.dataTables.min.css">
<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/css/bootstrap.min.css">

<h2>Instructors</h2>

@Html.AntiForgeryToken()

<button class="btn btn-success mb-3" id="addInstructorBtn">Add New Instructor</button>

<table class="table table-bordered table-striped" id="instructorsTable" style="width:100%">
    <thead>
        <tr>
            <th>ID</th>
            <th>First Name</th>
            <th>Last Name</th>
            <th>Email</th>
            <th>Specialization</th>
            <th>Actions</th>
        </tr>
    </thead>
</table>

<!-- Modal -->
<div class="modal fade" id="instructorModal" tabindex="-1">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Instructor</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
            </div>
            <div class="modal-body">
                <input type="hidden" id="instructorId" />
                <div class="mb-3">
                    <label class="form-label">First Name</label>
                    <input type="text" class="form-control" id="firstName" />
                </div>
                <div class="mb-3">
                    <label class="form-label">Last Name</label>
                    <input type="text" class="form-control" id="lastName" />
                </div>
                <div class="mb-3">
                    <label class="form-label">Email</label>
                    <input type="email" class="form-control" id="email" />
                </div>
                <div class="mb-3">
                    <label class="form-label">Specialization</label>
                    <input type="text" class="form-control" id="specialization" />
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                <button type="button" class="btn btn-primary" id="saveInstructorBtn">Save</button>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script src="https://code.jquery.com/jquery-3.7.0.min.js"></script>
    <script src="https://cdn.datatables.net/1.13.6/js/jquery.dataTables.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/js/bootstrap.bundle.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>

    <script>
        $(document).ready(function () {

            var token = $('input[name="__RequestVerificationToken"]').val();

            // Initialize DataTable
            var table = $('#instructorsTable').DataTable({
                dom: '<"row mb-3"<"col-sm-6"l><"col-sm-6 text-end"f>>rt<"row mt-3"<"col-sm-6"i><"col-sm-6 text-end"p>>',
                ajax: {
                    url: '@Url.Action("GetInstructors", "Instructor")',
                    type: 'GET',
                    dataSrc: 'data',
                    error: function(xhr) {
                        console.error("Ajax error:", xhr.responseText);
                    }
                },
                columns: [
                    { data: 'id' },
                    { data: 'firstName' },
                    { data: 'lastName' },
                    { data: 'email' },
                    { data: 'specialization' },
                    {
                        data: 'id',
                        render: function (data) {
                            return `
                                <button class="btn btn-sm btn-warning edit-btn" data-id="${data}">Edit</button>
                                <button class="btn btn-sm btn-danger delete-btn" data-id="${data}">Delete</button>
                            `;
                        }
                    }
                ]
            });

            // Add new
            $('#addInstructorBtn').click(function () {
                $('#instructorId, #firstName, #lastName, #email, #specialization').val('');
                $('.modal-title').text('Add New Instructor');
                new bootstrap.Modal(document.getElementById('instructorModal')).show();
            });

            // Save Add/Edit
            $('#saveInstructorBtn').click(function () {
                var id = $('#instructorId').val();
                var instructor = {
                    Id: id ? parseInt(id) : 0,
                    FirstName: $('#firstName').val().trim(),
                    LastName: $('#lastName').val().trim(),
                    Email: $('#email').val().trim(),
                    Specialization: $('#specialization').val().trim()
                };

                if (!instructor.FirstName || !instructor.LastName || !instructor.Email || !instructor.Specialization) {
                    Swal.fire('Error', 'All fields are required', 'error');
                    return;
                }

                $.ajax({
                    url: '@Url.Action("SaveInstructor", "Instructor")',
                    type: 'POST',
                    contentType: 'application/json',
                    headers: { "RequestVerificationToken": token },
                    data: JSON.stringify(instructor),
                    success: function (res) {
                        if (res.success) {
                            var modal = bootstrap.Modal.getInstance(document.getElementById('instructorModal'));
                            modal.hide();
                            table.ajax.reload(null, false);
                            Swal.fire('Success!', 'Instructor saved successfully', 'success');
                        } else {
                            Swal.fire('Error', res.message, 'error');
                        }
                    },
                    error: function (xhr) {
                        console.error(xhr.responseText);
                        Swal.fire('Error', 'Server error occurred', 'error');
                    }
                });
            });

            // Edit
            $('#instructorsTable tbody').on('click', '.edit-btn', function () {
                var id = $(this).data('id');
                $.getJSON('@Url.Action("GetInstructor", "Instructor")?id=' + id, function (data) {
                    if (data.success) {
                        $('#instructorId').val(data.data.id);
                        $('#firstName').val(data.data.firstName);
                        $('#lastName').val(data.data.lastName);
                        $('#email').val(data.data.email);
                        $('#specialization').val(data.data.specialization);
                        $('.modal-title').text('Edit Instructor');
                        new bootstrap.Modal(document.getElementById('instructorModal')).show();
                    } else {
                        Swal.fire('Error', data.message, 'error');
                    }
                });
            });

            // Delete
            $('#instructorsTable tbody').on('click', '.delete-btn', function () {
                var id = $(this).data('id');
                Swal.fire({
                    title: 'Are you sure?',
                    text: 'This instructor will be deleted!',
                    icon: 'warning',
                    showCancelButton: true,
                    confirmButtonText: 'Yes, delete it!'
                }).then((result) => {
                    if (result.isConfirmed) {
                        $.ajax({
                            url: '@Url.Action("DeleteInstructor", "Instructor")',
                            type: 'POST',
                            contentType: 'application/json',
                            headers: { "RequestVerificationToken": token },
                            data: JSON.stringify({ id: parseInt(id) }),
                            success: function(res) {
                                if (res.success) {
                                    table.ajax.reload(null, false);
                                    Swal.fire('Deleted!', 'Instructor deleted successfully', 'success');
                                } else {
                                    Swal.fire('Error', res.message, 'error');
                                }
                            },
                            error: function (xhr) {
                                console.error(xhr.responseText);
                                Swal.fire('Error', 'Server error occurred', 'error');
                            }
                        });
                    }
                });
            });

        });
    </script>
}
