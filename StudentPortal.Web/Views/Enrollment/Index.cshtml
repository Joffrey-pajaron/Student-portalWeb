@{
    ViewData["Title"] = "Enrollments";
}

<h2>Enrollments</h2>

<button class="btn btn-success mb-3" id="addEnrollmentBtn">Add Enrollment</button>

<table class="table table-bordered table-striped" id="enrollmentsTable" style="width:100%">
    <thead>
        <tr>
            <th>Student</th>
            <th>Course</th>
            <th>Enrollment Date</th>
            <th>Actions</th>
        </tr>
    </thead>
</table>

<!-- Add Enrollment Modal -->
<div class="modal fade" id="enrollmentModal" tabindex="-1" aria-labelledby="enrollmentModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="enrollmentModalLabel">Add Enrollment</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
            </div>
            <div class="modal-body">
                <div class="mb-3">
                    <label for="studentSelect" class="form-label">Select Student</label>
                    <select class="form-select" id="studentSelect"></select>
                </div>
                <div class="mb-3">
                    <label for="courseSelect" class="form-label">Select Course</label>
                    <select class="form-select" id="courseSelect"></select>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                <button type="button" class="btn btn-primary" id="saveEnrollmentBtn">Save</button>
            </div>
        </div>
    </div>
</div>


@section Scripts {
    <script>
        var table = $('#enrollmentsTable').DataTable({
            dom: '<"row mb-3"<"col-sm-6"l><"col-sm-6 text-end"f>>rt<"row mt-3"<"col-sm-6"i><"col-sm-6 text-end"p>>',
            ajax: {
                url: '@Url.Action("GetEnrollments", "Enrollment")',
                type: 'GET',
                dataSrc: 'data'
            },
            columns: [
                { data: 'studentName' },
                { data: 'courseName' },
                { data: 'enrollmentDate' },
                {
                    data: 'id',
                    render: function (data) {
                        return `
                            <button class="btn btn-sm btn-danger delete-btn" data-id="${data}">Delete</button>
                        `;
                    }
                }
            ]
        });

        // Add Enrollment (you’d likely show a modal with dropdowns for students + courses)
               // Add Enrollment - show modal
        $('#addEnrollmentBtn').click(function () {
            // Load students
            $.get('@Url.Action("GetStudents", "Enrollment")', function (students) {
                var $studentSelect = $('#studentSelect');
                $studentSelect.empty();
                $.each(students, function (i, s) {
                    $studentSelect.append(`<option value="${s.id}">${s.firstName} ${s.lastName}</option>`);
                });
            });

            // Load courses
            $.get('@Url.Action("GetCourses", "Enrollment")', function (courses) {
                var $courseSelect = $('#courseSelect');
                $courseSelect.empty();
                $.each(courses, function (i, c) {
                    $courseSelect.append(`<option value="${c.id}">${c.courseName}</option>`);
                });
            });

            $('#enrollmentModal').modal('show');
        });

        // Save Enrollment
            $('#saveEnrollmentBtn').click(function() {
            var studentId = $('#studentSelect').val(); // get selected student GUID
            var courseId = $('#courseSelect').val();   // get selected course GUID

            if (!studentId || !courseId) {
                Swal.fire('Error', 'Please select a student and a course', 'error');
                return;
            }

            var enrollment = {
                Id: crypto.randomUUID(), // generate a new GUID
                StudentId: studentId,
                CourseId: courseId,
                EnrollmentDate: new Date() // send current date
            };

            $.ajax({
                url: '/Enrollment/SaveEnrollment',
                type: 'POST',
                contentType: 'application/json',
                data: JSON.stringify(enrollment),
                success: function(res) {
                    if(res.success){
                        Swal.fire('Success','Enrollment added','success');
                        // reload table here
                    } else {
                        Swal.fire('Error', res.message, 'error');
                    }
                },
                error: function(xhr){
                    Swal.fire('Error','Server error occurred','error');
                    console.log(xhr.responseText);
                }
            });
        });



        // Delete Enrollment
        $('#enrollmentsTable').on('click', '.delete-btn', function () {
            var id = $(this).data('id');
            if (confirm('Are you sure you want to delete this enrollment?')) {
                $.ajax({
                    url: '@Url.Action("DeleteEnrollment", "Enrollment")?id=' + id,
                    type: 'DELETE',
                    success: function (res) {
                        if (res.success) {
                            table.ajax.reload();
                            alert(res.message);
                        } else {
                            alert(res.message);
                        }
                    },
                    error: function () {
                        alert('Error deleting enrollment.');
                    }
                });
            }
        });
    </script>
}
