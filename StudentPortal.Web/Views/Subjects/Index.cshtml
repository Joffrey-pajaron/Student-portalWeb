@{
    ViewData["Title"] = "Subjects";
}

<h2>Subjects</h2>

<div class="mb-3">
    <input type="text" id="subjectName" placeholder="Enter subject name" class="form-control mb-2" />
    <input type="text" id="instructorName" placeholder="Search Instructor Name" class="form-control mb-2" list="instructorSuggestions" />
    <datalist id="instructorSuggestions"></datalist>
    <button id="btnAddSubject" class="btn btn-primary">Add Subject</button>
</div>

<table class="table table-bordered">
    <thead>
        <tr>
            <th>Subject ID</th>
            <th>Subject Name</th>
             <th>Instructor ID</th>
            <th>Instructor Name</th>
        </tr>
    </thead>
    <tbody id="subjectsTableBody"></tbody>
</table>

@section Scripts {
    <script>
        async function loadSubjects() {
            const res = await fetch("/Subjects/GetSubjects");
            const data = await res.json();
            if (data.success === 1) {
                const tbody = document.getElementById("subjectsTableBody");
                tbody.innerHTML = "";
                data.data.forEach(s => {
                    tbody.innerHTML += `
                        <tr>
                            <td>${s.subjectId}</td>
                            <td>${s.subjectName}</td>
                            <td>${s.instructorId ?? ""}</td>
                              <td>${s.fullName}</td>
                        </tr>`;
                });
            } else {
                alert(data.message || "Error loading subjects.");
            }
        }

             document.getElementById("btnAddSubject").addEventListener("click", async () => {
            const subjectName = document.getElementById("subjectName").value.trim();
            if (!subjectName) return alert("Subject name is required.");

            const instructorId = selectedInstructorId;

            const res = await fetch("/Subjects/Create", {
                method: "POST",
                headers: { "Content-Type": "application/json" },
                body: JSON.stringify({
                    subjectName,
                    instructorId: instructorId || null
                })
            });

            const data = await res.json();
            if (data.success === 1) {
                alert("Subject added successfully!");
                document.getElementById("subjectName").value = "";
                instructorInput.value = "";
                selectedInstructorId = null;
                loadSubjects();
            } else {
                alert(data.message || "Error adding subject.");
            }
        });


        const instructorInput = document.getElementById("instructorName");
        const datalist = document.getElementById("instructorSuggestions");
        let selectedInstructorId = null;

        instructorInput.addEventListener("input", async () => {
            const name = instructorInput.value.trim();
            if (name.length < 2) return; // wait until 2 chars

            const res = await fetch(`/Subjects/SearchInstructors?name=${encodeURIComponent(name)}`);
            const data = await res.json();

            if (data.success === 1) {
                datalist.innerHTML = "";
                data.data.forEach(i => {
                    const option = document.createElement("option");
                    option.value = `${i.FirstName} ${i.LastName}`;
                    option.dataset.id = i.Id;
                    datalist.appendChild(option);
                });
            }
        });

        // Optional: get selected instructor ID
        instructorInput.addEventListener("change", () => {
            const selected = Array.from(datalist.options).find(opt => opt.value === instructorInput.value);
            selectedInstructorId = selected ? selected.dataset.id : null;
        });


        // Load subjects on page load
        loadSubjects();
    </script>
}
