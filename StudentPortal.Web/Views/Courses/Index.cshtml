@{
    ViewData["Title"] = "Courses";
}

<!-- DataTables CSS -->
<link rel="stylesheet" href="https://cdn.datatables.net/1.13.5/css/jquery.dataTables.min.css">

<h2>Courses</h2>

<!-- Anti-forgery token -->
@Html.AntiForgeryToken()

<button class="btn btn-success mb-3" id="addCourseBtn">Add New Course</button>

<table class="table table-bordered table-striped" id="coursesTable" style="width:100%">
    <thead>
        <tr>
            <th>Course Name</th>
            <th>Description</th>
            <th>Actions</th>
        </tr>
    </thead>
</table>

<!-- Modal for Add/Edit -->
<div class="modal fade" id="courseModal" tabindex="-1" role="dialog">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Course</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <input type="hidden" id="courseId" />

                <div class="mb-3">
                    <label for="courseName" class="form-label">Course Name</label>
                    <input type="text" class="form-control" id="courseName" required />
                </div>

                <div class="mb-3">
                    <label for="courseDescription" class="form-label">Description</label>
                    <textarea class="form-control" id="courseDescription"></textarea>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                <button type="button" class="btn btn-primary" id="saveCourseBtn">Save</button>
            </div>
        </div>
    </div>
</div>

<div class="card mt-4 mb-3 shadow-sm">
    <div class="card-header bg-danger text-white">
        <h5 class="mb-0">Assign Subjects to Course</h5>
    </div>
    <div class="card-body">
        <div class="mb-3">
            <label for="courseSelect" class="form-label fw-bold">Select Course</label>
            <select id="courseSelect" class="form-select"></select>
        </div>

        <div class="mb-3">
            <label class="form-label fw-bold">Select Subjects</label>
            <div id="subjectsList" class="row row-cols-2"></div>
        </div>

        <button id="assignSubjectsBtn" class="btn btn-success">
            <i class="bi bi-link-45deg"></i> Assign Subjects
        </button>
    </div>
</div>

<!-- NEW: Assigned Subjects Table -->
<div class="card mt-4 mb-3 shadow-sm">
<div class="card-header bg-danger text-white">
    <h5 class="mb-0">Assigned Subjects</h5>
</div>
<table class="table table-bordered table-sm" id="assignedSubjectsTable">
    <thead>
        <tr>
            <th>Subject Name</th>
            <th>Instructor Name</th>
            <th>Action</th>
        </tr>
    </thead>
    <tbody></tbody>
</table>
</div>
</div>
</div>

<style>
    .dataTables_filter input.form-control {
        width: 240px !important;
        display: inline-block !important;
    }
</style>

@section Scripts {
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script src="https://cdn.datatables.net/1.13.5/js/jquery.dataTables.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>

    <script>
        //subject assignment code
            $(document).ready(function(){
            // Load courses
            $.get("/Courses/GetCourses", function(res){
                if(res.success){
                    res.data.forEach(c => {
                       $("#courseSelect").append(`<option value="${c.id}">${c.courseName}</option>`);
                    });
                }
            });

            // Load all subjects as checkboxes
          $.get("/CourseSubject/GetAllSubjects", function (res) {
                if (res.success) {
                    res.data.forEach(s => {
                        $("#subjectsList").append(`
                            <div class="col mb-2">
                                <div class="form-check border rounded p-2">
                                    <input type="checkbox" class="form-check-input subjectCheckbox" id="subject-${s.subjectId}" value="${s.subjectId}" />
                                    <label class="form-check-label" for="subject-${s.subjectId}">${s.subjectName}</label>
                                </div>
                            </div>
                        `);
                    });
                }
            });

             // When course is selected, load its assigned subjects
         $("#courseSelect").change(function(){
            let courseId = $(this).val();
            if(courseId) {
                loadAssignedSubjects(courseId);
            }
        });

            //function for table load
        function loadAssignedSubjects(courseId) {
            $.get("/CourseSubject/GetSubjectsByCourse?courseId=" + courseId, function(res){
                if(res.success){
                    let tbody = $("#assignedSubjectsTable tbody");
                    tbody.empty();

                    // Reset checkboxes first (enable everything)
                    $(".subjectCheckbox").prop("disabled", false).prop("checked", false);

                    if(res.data.length === 0){
                        tbody.append(`<tr><td colspan="3" class="text-muted">No subjects assigned</td></tr>`);
                    } else {
                        res.data.forEach(s => {
                            // Build table row
                            const $tr = $("<tr>");
                            $tr.append($("<td>").text(s.subjectName));
                            $tr.append($("<td>").text(s.instructorName));
                            const $btn = $(`<button class="btn btn-sm btn-danger remove-subject-btn">Remove</button>`)
                                            .attr("data-id", s.subjectId)
                                            .attr("data-course", courseId);
                            $tr.append($("<td>").append($btn));
                            tbody.append($tr);

                            // Disable checkbox for already-assigned subjects
                            $(`#subject-${s.subjectId}`).prop("disabled", true).prop("checked", false);
                        });
                    }
                }
            });
        }


        // Handle remove subject
        $(document).on("click", ".remove-subject-btn", function(){
            let subjectId = $(this).data("id");
            let courseId = $(this).data("course");

            $.ajax({
                url: "/CourseSubject/RemoveSubjectFromCourse",
                type: "POST",
                contentType: "application/json",
                data: JSON.stringify({ courseId: courseId, subjectId: subjectId }),
                success: function(res){
                    if(res.success){
                        // reload table
                        $("#courseSelect").trigger("change");
                        Swal.fire("Removed!", res.message, "success");
                    } else {
                        Swal.fire("Error", res.message, "error");
                    }
                }
            });
        });

                // Load courses
        $.get("/Courses/GetCourses", function(res){
            if(res.success){
                res.data.forEach((c, index) => {
                    $("#courseSelect").append(`<option value="${c.id}">${c.courseName}</option>`);
                });

                // ✅ Trigger change for the first course
                if(res.data.length > 0){
                    $("#courseSelect").val(res.data[0].id).trigger("change");
                }
            }
        });


            // Assign subjects button
            $("#assignSubjectsBtn").click(function(){
                let courseId = $("#courseSelect").val();
                let selectedSubjects = $(".subjectCheckbox:checked").map(function(){ return $(this).val(); }).get();

                $.ajax({
                    url: "/CourseSubject/AddSubjectsToCourse",
                    type: "POST",
                    contentType: "application/json",
                    data: JSON.stringify({ courseId: courseId, subjectIds: selectedSubjects }),
                    success: function(res){
                        if(res.success){
                            Swal.fire("Success", res.message, "success");
                            loadAssignedSubjects(courseId); // 👈 refresh table + checkboxes
                        } else {
                             Swal.fire("Error", res.message, "error");
                        }
                    }
                });
            });
        });

        //course code 
        $(document).ready(function () {

            // Anti-forgery token
            var token = $('input[name="__RequestVerificationToken"]').val();

            // Initialize DataTable
            var table = $('#coursesTable').DataTable({
               dom: '<"row mb-3"<"col-sm-6"l><"col-sm-6 text-end"f>>rt<"row mt-3"<"col-sm-6"i><"col-sm-6 text-en00d"p>>',
                ajax: {
                    url: '@Url.Action("GetCourses", "Courses")',
                    type: 'GET',
                    dataSrc: 'data'
                },
                columns: [
                    { data: 'courseName' },
                    { data: 'description' },
                    {
                        data: 'id',
                        render: function (data) {
                            return `
                                <button class="btn btn-sm btn-warning edit-btn" data-id="${data}">Edit</button>
                                <button class="btn btn-sm btn-danger delete-btn" data-id="${data}">Delete</button>
                            `;
                        }
                    }
                ]
            });

            // Add New Course
            $('#addCourseBtn').click(function () {
                $('#courseId, #courseName, #courseDescription').val('');
                $('.modal-title').text('Add New Course');
                new bootstrap.Modal(document.getElementById('courseModal')).show();
            });

            // Save (Add/Edit)
            $('#saveCourseBtn').click(function () {
                var id = $('#courseId').val();
                var course = {
                    Id: id ? id : 0,
                    CourseName: $('#courseName').val().trim(),
                    Description: $('#courseDescription').val().trim()
                };

                if (!course.CourseName) {
                    Swal.fire('Error', 'Course name is required', 'error');
                    return;
                }

                var url = id ? '@Url.Action("Edit", "Courses")' : '@Url.Action("Create", "Courses")';

                $.ajax({
                    url: url,
                    type: 'POST',
                    contentType: 'application/json',
                    headers: { "RequestVerificationToken": token },
                    data: JSON.stringify(course),
                    success: function (res) {
                        if (res.success) {
                            var modal = bootstrap.Modal.getInstance(document.getElementById('courseModal'));
                            modal.hide();
                            table.ajax.reload(null, false);
                            Swal.fire('Success!', 'Course saved successfully', 'success');
                        } else {
                            Swal.fire('Error', res.message, 'error');
                        }
                    },
                    error: function () {
                        Swal.fire('Error', 'Server error occurred', 'error');
                    }
                });
            });

            // Edit
            $('#coursesTable tbody').on('click', '.edit-btn', function () {
                var id = $(this).data('id');
                $.getJSON('@Url.Action("GetCourse", "Courses")?id=' + id, function (data) {
                    if (data.success) {
                        $('#courseId').val(data.data.id);
                        $('#courseName').val(data.data.courseName);
                        $('#courseDescription').val(data.data.description);
                        $('.modal-title').text('Edit Course');
                        new bootstrap.Modal(document.getElementById('courseModal')).show();
                    } else {
                        Swal.fire('Error', data.message, 'error');
                    }
                });
            });

            // Delete
            $('#coursesTable tbody').on('click', '.delete-btn', function () {
                var id = $(this).data('id');
                Swal.fire({
                    title: 'Are you sure?',
                    text: 'This course will be permanently deleted!',
                    icon: 'warning',
                    showCancelButton: true,
                    confirmButtonText: 'Yes, delete it!'
                }).then((result) => {
                    if (result.isConfirmed) {
                        $.ajax({
                            url: '@Url.Action("Delete", "Courses")',
                            type: 'POST',
                            contentType: 'application/json',
                            headers: { "RequestVerificationToken": token },
                            data: JSON.stringify({ id: id }),
                            success: function (res) {
                                if (res.success) {
                                    table.ajax.reload(null, false);
                                    Swal.fire('Deleted!', 'Course deleted successfully', 'success');
                                } else {
                                    Swal.fire('Error', res.message, 'error');
                                }
                            },
                            error: function () {
                                Swal.fire('Error', 'Server error occurred', 'error');
                            }
                        });
                    }
                });
            });

        });
    </script>
}
